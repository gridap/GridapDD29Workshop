using Literate
using Printf

"""
    process_hashtag(str, hashtag, fn; striptag=true)

Process all lines in str which start with a hashtag by the
function `fn` (`line->newline`).
"""
function process_hashtag(str, hashtag, fn; striptag=true)
  hashtag = strip(hashtag)
  occursin("\r\n", str) && error("""DOS line endings "\r"n" not supported""")
  out = ""
  regex = Regex(hashtag)
  for line in split(str, '\n')
    line = if occursin(regex, line)
      fn(striptag ? replace(line, hashtag=>"") : line)
    else
      line = line * "\n"
    end
    out = out * line
  end
  return out
end

"Use as `preproces` function to remove `#sol`-lines & just remote `#tag`-tag"
function rm_sol(str)
  str = process_hashtag(str, "#sol=", line->"")
  str = process_hashtag(str, "#hint=", line->"#" * line * "\n")
  return str
end

"Use as `preproces` function to remove `#hint`-lines & just remote `#sol`-tag"
function rm_hint(str)
  str = process_hashtag(str, "#sol=", line->line * "\n")
  str = process_hashtag(str, "#hint=", line->"")
  return str
end

repo_src = joinpath(@__DIR__,"..","src")
notebooks_dir = joinpath(@__DIR__,"..","notebooks")
scripts_dir = joinpath(@__DIR__,"..","scripts")
notebooks_sol_dir = string(notebooks_dir,"-solutions")
scripts_sol_dir = string(scripts_dir,"-solutions")

Sys.rm(notebooks_dir;recursive=true,force=true)
Sys.rm(scripts_dir;recursive=true,force=true)
Sys.rm(notebooks_sol_dir;recursive=true,force=true)
Sys.rm(scripts_sol_dir;recursive=true,force=true)

files = readdir(repo_src)
for file in files
  if splitext(file)[end]!=".jl" || contains(file, "DD29")
    continue
  end

  # Render
  path = joinpath(repo_src, file)
  Literate.notebook(path, notebooks_dir, execute=false, mdstrings=true, preprocess=rm_sol)
  Literate.script(path, scripts_dir, execute=false, mdstrings=true, preprocess=rm_sol)
  Literate.notebook(path, notebooks_sol_dir, execute=false, mdstrings=true, preprocess=rm_hint)
  Literate.script(path, scripts_sol_dir, execute=false, mdstrings=true, preprocess=rm_hint)
end

deps_jl = joinpath(@__DIR__, "deps.jl")

if isfile(deps_jl)
  rm(deps_jl)
end

open(deps_jl,"w") do f
  println(f, "# This file is automatically generated")
  println(f, "# Do not edit")
  println(f)
  println(f, :(const files = $files))
end
